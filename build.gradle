apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

compileJava {
  sourceCompatibility = 1.7
  targetCompatibility = 1.7
}

version = '1.0'

mainClassName = 'nl.esciencecenter.newsreader.hbase.Main'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.mockito:mockito-core:1.+'
    testCompile 'joda-time:joda-time:2.7'
    compile 'org.apache.hadoop:hadoop-common:2.2.0'
    compile 'org.apache.hbase:hbase-client:0.98.4-hadoop2'
    compile 'com.beust:jcommander:1.48'
    compile 'org.apache.commons:commons-compress:1.9'
}

// Allow args from `gradle run` to be send to main class
// For example: gradle run -Pargs='dump ....'
run {
    if(project.hasProperty('args')){
        args project.args.split('\\s+')
    }
}


// hbase configuration files must be in classpath
// For hardcoded config files add them to src/main/resources, so they are part of the distribution
// To have external config file the section below was added
// http://discuss.gradle.org/t/classpath-in-application-plugin-is-building-always-relative-to-app-home-lib-directory/2012/3
startScripts {
    classpath += files('conf')
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\conf', '%APP_HOME%\\conf')
        unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/conf', '$APP_HOME/conf')
    }
}